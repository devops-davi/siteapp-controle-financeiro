// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('Teste unitário do frontEnd', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('Teste unitário do frontEnd', async function() {
    // Test name: Teste unitário do frontEnd
    // Step # | name | target | value
    // 1 | open | https://testes-apps.herokuapp.com/ | 
    await driver.get("https://testes-apps.herokuapp.com/")
    // 2 | setWindowSize | 1108x600 | 
    await driver.manage().window().setRect({ width: 1108, height: 600 })
    // 3 | click | css=.float-button | 
    await driver.findElement(By.css(".float-button")).click()
    // 4 | click | id=description | 
    await driver.findElement(By.id("description")).click()
    // 5 | click | id=description | 
    await driver.findElement(By.id("description")).click()
    // 6 | click | id=amount | 
    await driver.findElement(By.id("amount")).click()
    // 7 | type | id=amount | 5000.00
    await driver.findElement(By.id("amount")).sendKeys("5000.00")
    // 8 | click | id=description | 
    await driver.findElement(By.id("description")).click()
    // 9 | type | id=description | teste valor entrada
    await driver.findElement(By.id("description")).sendKeys("teste valor entrada")
    // 10 | click | id=date | 
    await driver.findElement(By.id("date")).click()
    // 11 | type | id=date | 2022-11-23
    await driver.findElement(By.id("date")).sendKeys("2022-11-23")
    // 12 | click | css=button | 
    await driver.findElement(By.css("button")).click()
    // 13 | click | css=.remove | 
    await driver.findElement(By.css(".remove")).click()
    // 14 | click | css=.float-button | 
    await driver.findElement(By.css(".float-button")).click()
    // 15 | click | id=description | 
    await driver.findElement(By.id("description")).click()
    // 16 | type | id=description | Teste valor saida
    await driver.findElement(By.id("description")).sendKeys("Teste valor saida")
    // 17 | click | id=amount | 
    await driver.findElement(By.id("amount")).click()
    // 18 | type | id=amount | 5000.00
    await driver.findElement(By.id("amount")).sendKeys("5000.00")
    // 19 | click | id=date | 
    await driver.findElement(By.id("date")).click()
    // 20 | type | id=date | 2022-11-23
    await driver.findElement(By.id("date")).sendKeys("2022-11-23")
    // 21 | click | css=button | 
    await driver.findElement(By.css("button")).click()
    // 22 | click | css=.remove | 
    await driver.findElement(By.css(".remove")).click()
    // 23 | click | css=.float-button | 
    await driver.findElement(By.css(".float-button")).click()
    // 24 | click | id=description | 
    await driver.findElement(By.id("description")).click()
    // 25 | type | id=description | teste valor entrada
    await driver.findElement(By.id("description")).sendKeys("teste valor entrada")
    // 26 | type | id=description | teste valor saida
    await driver.findElement(By.id("description")).sendKeys("teste valor saida")
    // 27 | click | id=amount | 
    await driver.findElement(By.id("amount")).click()
    // 28 | type | id=amount | -5000.00
    await driver.findElement(By.id("amount")).sendKeys("-5000.00")
    // 29 | click | id=date | 
    await driver.findElement(By.id("date")).click()
    // 30 | type | id=date | 2022-11-23
    await driver.findElement(By.id("date")).sendKeys("2022-11-23")
    // 31 | click | css=button | 
    await driver.findElement(By.css("button")).click()
    // 32 | mouseOver | css=button | 
    {
      const element = await driver.findElement(By.css("button"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 33 | mouseOut | css=button | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    // 34 | click | css=.float-button | 
    await driver.findElement(By.css(".float-button")).click()
    // 35 | click | id=description | 
    await driver.findElement(By.id("description")).click()
    // 36 | type | id=description | valor entrada para bater valor saida
    await driver.findElement(By.id("description")).sendKeys("valor entrada para bater valor saida")
    // 37 | click | id=amount | 
    await driver.findElement(By.id("amount")).click()
    // 38 | type | id=amount | 3000
    await driver.findElement(By.id("amount")).sendKeys("3000")
    // 39 | click | id=date | 
    await driver.findElement(By.id("date")).click()
    // 40 | type | id=date | 2022-11-23
    await driver.findElement(By.id("date")).sendKeys("2022-11-23")
    // 41 | click | css=button | 
    await driver.findElement(By.css("button")).click()
    // 42 | click | css=.float-button | 
    await driver.findElement(By.css(".float-button")).click()
    // 43 | click | id=description | 
    await driver.findElement(By.id("description")).click()
    // 44 | type | id=description | valor entrada para abater valor saida
    await driver.findElement(By.id("description")).sendKeys("valor entrada para abater valor saida")
    // 45 | click | id=amount | 
    await driver.findElement(By.id("amount")).click()
    // 46 | type | id=amount | 2000
    await driver.findElement(By.id("amount")).sendKeys("2000")
    // 47 | click | id=date | 
    await driver.findElement(By.id("date")).click()
    // 48 | type | id=date | 2022-11-23
    await driver.findElement(By.id("date")).sendKeys("2022-11-23")
    // 49 | click | css=button | 
    await driver.findElement(By.css("button")).click()
    // 50 | mouseOver | css=button | 
    {
      const element = await driver.findElement(By.css("button"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 51 | mouseOut | css=button | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    // 52 | click | css=tr:nth-child(3) .remove | 
    await driver.findElement(By.css("tr:nth-child(3) .remove")).click()
    // 53 | click | css=tr:nth-child(2) .remove | 
    await driver.findElement(By.css("tr:nth-child(2) .remove")).click()
    // 54 | click | css=.remove | 
    await driver.findElement(By.css(".remove")).click()
  })
})
